
					<!--This code generated from staging Powered by Mahat, Source Machine : stg , Build Number : #2024-07-004 (Updated on 07/07/2024 22:07) on 05/06/2025 11:28:20 -->
					@using Microsoft.AspNetCore.Http
					@inject IHttpContextAccessor HttpContextAccessor
                    @using Admin;
					@model Marketplacenew.Models.usersModel
					@{
					ViewData["Title"] = @Resource.listofuserprofiles;
					Layout = "~/Views/Shared/_Layout.cshtml";
					}

					<div class="card " style="padding:20px;">
					<div class="mobileHeader"><!--form_card_header-->
					<div class="row">
					<div class="col-sm-12 col-xs-12">
					<h3 class="formHdr">@Resource.listofuserprofiles</h3>
					</div>
					</div>
					</div><!--form_card_header-->
					<div class="card-body" style="padding:1px;padding-top:0px;">

					@if(TempData["errMessage"] != null)
					{
					<div class="row">
					<div class="col-sm-12 col-xs-12">
					<div class="alert alert-danger alert-dismissible ">
					<button type="button" class="close" data-dismiss="alert" aria-label="Close">
					<span aria-hidden="true">x</span>
					</button>
					Info :  @TempData["errMessage"]
					</div>
					</div>
					</div>
					}

					@if(TempData["message"] != null)
					{
					<div class="row">
					<div class="col-sm-12 col-xs-12">
					<div class="alert alert-success alert-dismissible ">
					<button type="button" class="close" data-dismiss="alert" aria-label="Close">
					<span aria-hidden="true">x</span>
					</button>
					Info :  @TempData["message"]
					</div>
					</div>
					</div>
					}

					<input type="hidden" id="usersid" name="usersid"/>
					<div class="row">
								<div class="col-sm-2 col-xs-12 p-2">
								<div>
								<div class="form-group form-group--float-above my-3" > 
								<label for="tenantid" class="tenant_display">@Resource.tenantdisplayname</label>
								<select name="tenantid" id="tenantid" class="form-control">
								</select>
								<i class="form-group__bar"></i>
								</div>

								<div id="tenantid-error" class="help-block" style="display: none" role="alert"></div>
								</div>
								</div>
								
								</div>

					<div class="row"><div class="col-sm-12 col-xs-12">
					<div class="table-responsive" style="margin:0px;">
					<table id="tblusers" class="table order-column hover responsive nowrap mahatTableWidthSetter" style="margin:0px; ">
					<thead class="thead-default">
					<tr>
                    
					<th>@Resource.users_firstname</th>
<th>@Resource.users_lastname</th>
<th>@Resource.users_profilepicture</th>
<th>@Resource.users_username</th>
<th>@Resource.users_emailid</th>
<th>@Resource.users_mobilenumber</th>
<th>@Resource.users_userrole</th>
<th>@Resource.alloweddevices</th>
<th>@Resource.tenantdisplayname</th>

					<th class="all">Action</th>
					

					</tr>
					</thead>
					<tbody></tbody>
					
					</table>
					</div>

					</div>
					
					
					</div>
					
					</div>
					</div>
					
                    <link href="~/components/jquery-colorbox/colorbox.css" rel="stylesheet" />
                    <script src="~/components/jquery-colorbox/jquery.colorbox.js"></script>
                    <link href="~/css/GallaryContent/style.css" rel="stylesheet" />
                    <link href="~/components/starrr/starrr.css" rel="stylesheet" />
					
					<script type="text/javascript">

                 var arr_selected_for_verification = [];

					function fill_users()
					{
						

					var sendFilterData = {
								"tenantid":($("#tenantid").val() ? $("#tenantid").val() : str_tenantid),
								 
								}

					


					

var table=$("#tblusers").DataTable({
columnDefs: [{ 
     targets: -1,
     title: '<i class="fa fa-pencil fa-lg"></i>'
  }],
        
		destroy:true,
"orderMulti": false,
	"order": [],"aaSorting": [],
 	autoWidth: !1,responsive:!0,
	lengthMenu: [
	[15, 30, 45, -1],
	["15 Rows", "30 Rows", "45 Rows", "Everything"]
	],
	language: {
	searchPlaceholder: "Search for records..."
	},
	 language: { search: '<i class="fa fa-search"></i>', searchPlaceholder: "Search for records..." },
	dom: "Bfrtip", sDom: '<"dataTables__top"lfB>rt<"dataTables__bottom"ip><"clear">',
  
	buttons: [{
	extend: "excelHtml5",
	title: "List Of users Data"
	}, {
	extend: "csvHtml5",
	title: "List Of users Data"
	}, {
	extend: "print",
	title: "List Of users Data"
	}],
 initComplete: function(a, b) {



      $(this).closest(".dataTables_wrapper").find(".dt-buttons").hide();
      
if ($('#btnFilter').length) {
     $(this).closest(".dataTables_wrapper").find(".dataTables_length").prepend(`
        <i class="automatonShowFilter actions__item mdi material-icons">filter_alt</i>
      `);
 }
var Actions=getAutho("users","create")
		if(Actions != undefined){
			var create_URL = "@Url.Action("entry.viewname", "users")"
		    create_URL = create_URL.replace("entry.viewname", Actions.actionmethodname);
            if ("@ViewContext.RouteData.Values["action"].ToString().ToUpper()" == "LIST_OF_USER_PROFILES")
                        create_URL = create_URL + '?businesstype=' + getUrlVars()["businesstype"];
            $(this).closest(".dataTables_wrapper").find(".dataTables__top").prepend(`
           
        <div class="dataTables_buttons actions">
            <div class="input-group prefix">
	                        <span class="input-group-addon">
	                        <i class="material-icons">search</i>
	                        </span>
	                        <input type="text" class="form-control dt-global-search" placeholder="Search..." />
                        </div>
          <div class="dropdown actions__item cma_top_icon">
            <i data-toggle="dropdown" class="material-icons">share</i>
            <ul class="dropdown-menu dropdown-menu-right">
              <a href="javascript: void 0" class="dropdown-item" data-table-action="excel">Excel (.xlsx)</a>
              <a href="javascript: void 0" class="dropdown-item" data-table-action="csv">CSV (.csv)</a>
             
            </ul>
          </div>
         <div class="dropdown actions__item cma_top_icon">
                                    <i data-toggle="dropdown" class="material-icons">settings</i>
                                    <ul class="dropdown-menu dropdown-menu-right ColVis_collection">
                                    <li>
                                                                <label> @Resource.users_firstname
 <input type="checkbox" class="colvis_switch" data-column="0" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.users_lastname
 <input type="checkbox" class="colvis_switch" data-column="1" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.users_profilepicture
 <input type="checkbox" class="colvis_switch" data-column="2" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.users_username
 <input type="checkbox" class="colvis_switch" data-column="3" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.users_emailid
 <input type="checkbox" class="colvis_switch" data-column="4" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.users_mobilenumber
 <input type="checkbox" class="colvis_switch" data-column="5" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.users_userrole
 <input type="checkbox" class="colvis_switch" data-column="6" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.alloweddevices
 <input type="checkbox" class="colvis_switch" data-column="7" checked /></label>
                                                              </li>
   
                                    </ul>
                                    </div>

         <a href="create_URL" class="btn btn-rounded add-row-btn cma_add_button">Add <span class="material-icons">add</span></a>
        </div>
      `.replace("create_URL", create_URL))
if ($(this).hasClass('make-active')) {
        $('tbody', $(this)).children('tr').first().addClass('active-row');
        setTimeout(() => {
          $('.active-row td:visible:last').addClass('last-active-td');
        }, 200);
      }
      $(this).closest(".dataTables_wrapper").find(".dt-global-search").on('keyup', function() {
        table.search(this.value).draw();
      });

        }
            else{
            $(this).closest(".dataTables_wrapper").find(".dataTables__top").prepend(` 
        
        
        <div class="dataTables_buttons actions">
        <div class="input-group prefix">
	                        <span class="input-group-addon">
	                        <i class="material-icons">search</i>
	                        </span>
	                        <input type="text" class="form-control dt-global-search" placeholder="Search..." />
                        </div>
          <div class="dropdown actions__item cma_top_icon">
            <i data-toggle="dropdown" class="material-icons">share</i>
            <ul class="dropdown-menu dropdown-menu-right">
              <a href="javascript: void 0" class="dropdown-item" data-table-action="excel">Excel (.xlsx)</a>
              <a href="javascript: void 0" class="dropdown-item" data-table-action="csv">CSV (.csv)</a>
             
            </ul>
          </div>
         <div class="dropdown actions__item cma_top_icon">
                                    <i data-toggle="dropdown" class="material-icons">settings</i>
                                    <ul class="dropdown-menu dropdown-menu-right ColVis_collection">
                                    <li>
                                                                <label> @Resource.users_firstname
 <input type="checkbox" class="colvis_switch" data-column="0" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.users_lastname
 <input type="checkbox" class="colvis_switch" data-column="1" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.users_profilepicture
 <input type="checkbox" class="colvis_switch" data-column="2" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.users_username
 <input type="checkbox" class="colvis_switch" data-column="3" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.users_emailid
 <input type="checkbox" class="colvis_switch" data-column="4" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.users_mobilenumber
 <input type="checkbox" class="colvis_switch" data-column="5" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.users_userrole
 <input type="checkbox" class="colvis_switch" data-column="6" checked /></label>
                                                              </li>
<li>
                                                                <label> @Resource.alloweddevices
 <input type="checkbox" class="colvis_switch" data-column="7" checked /></label>
                                                              </li>
   
                                    </ul>
                                    </div>
        </div>
      `)
if ($(this).hasClass('make-active')) {
        $('tbody', $(this)).children('tr').first().addClass('active-row');
        setTimeout(() => {
          $('.active-row td:visible:last').addClass('last-active-td');
        }, 200);
      }
      $(this).closest(".dataTables_wrapper").find(".dt-global-search").on('keyup', function() {
        table.search(this.value).draw();
      });

        }
        
    }
	 ,columns: [
            
		{data: 'firstname'},
{data: 'lastname'},
{data: 'profilepicture',mRender: function (data, type, row) {if(row["profilepicture"]==null) {
 return '-' 
}else {
 
var uploaded_profilepicture = row["profilepicture"].split('|');
var iterate = 1;
                                            var collect_files="";
                                            var random_num=Math.floor(Math.random() * (100000 - 1 + 1) + 57);
                                            for (var i = 0; i < uploaded_profilepicture.length; i++) {
        

	                                            if (uploaded_profilepicture[i] != "") {
if(iterate==1)
collect_files+='<a class="img'+random_num+'" href=' + uploaded_profilepicture[i] + '><img  class="disp_image '+random_num+'" style="width: 75px; height: 75px" src=' + uploaded_profilepicture[i] + 'alt="img"></a>'
else
collect_files+='<a class="img'+random_num+'" href=' + uploaded_profilepicture[i] + '><img class="disp_image '+random_num+'" style="display:none;width: 75px; height: 75px" src=' + uploaded_profilepicture[i] + 'alt="img"></a>'
iterate = iterate + 1;
	                                            }

                                              
                                            }
$('body').on('click', 'a.img' + random_num + '', function(e) {
e.preventDefault();
$('.img' + random_num + '').colorbox({rel: $(this).attr('href'), width: "90%", height: "80%" });
$.colorbox({open: true });
});
return collect_files;  }}},
{data: 'username'},
{data: 'emailid',mRender: function (data, type, row) {if(row["emailid"]==null) {
 return '-' 
}else {
 return '<a  href="mailto:' + row["emailid"]+ '">'+ row["emailid"]+ '</a>' 
}
}},
{data: 'mobilenumber',mRender: function (data, type, row) {if(row["mobilenumber"]==null) {
 return '-' 
}else {
 return '<a  href="tel:' + row["mobilenumber"]+ '">'+ row["mobilenumber"]+ '</a>' 
}
}},
{data: 'userrole'},
{
                                    data: 'automaton_users_alloweddevices',
                                    mRender: function(data, type, row) {
                                        if (row['automaton_users_alloweddevices'] == null)
                                        {
                                            return '-'
                                        }
                                        else
                                        {
                                            return get_dependent_li(row['automaton_users_alloweddevices']);

                                        }
                                    }
                                },
{data: '_tenantname'},

		{
                    "sName": "usersid",
                    "bSearchable": false,
                    "bSortable": false,
                    data: 'usersid', "className": "dt-center",
                    mRender: function(data, type, row) {
                    var Actions=getAuthoController("users")
                    var DETAIL_URL = "@Url.Action("detail", "users")?id=" + row["usersid"]
		            var appendMessage='<a href="' + DETAIL_URL + '" class="dropdown-item">View</a>';
                    if(Actions !=undefined)
                    {
                    for (var index = 0; index < Actions.length; ++index) {
                    var entry = Actions[index];
			 
                    if(entry.viewname !="list" && entry.viewname !="list_verify_approved" && entry.viewname !="list_verify" && entry.viewname !="create" && entry.viewname !="post" && entry.viewname !="getall" && entry.viewname !="get" && entry.viewname !="check_user" && entry.viewname !="change_password"){
                    var URL = "@Url.Action("entry.viewname", "users")?usersid=" + row["usersid"]+"&businesstype="+getUrlVars()["businesstype"]
                    URL = URL.replace("entry.viewname", entry.actionmethodname);
			 
                    if(entry.viewname=="delete")
                    {
	                    
	                    appendMessage+='<a href="' + URL + '" class="dropdown-item deleteRecordFromTable">'+entry.actiondisplayname+'</a>' 	
				   
				
                    }
                    
                    else
                    {
                     
	                    appendMessage+='<a href="' + URL + '" class="dropdown-item">'+entry.actiondisplayname+'</a>' 
                    }
			 
                    }					 
						 
                    }
								
                    if(appendMessage ==""|| row["userrole"]=='Platform Admin')
                    {
                    return '-'

                    }
                    else
                    {
                    return '<div class="dropdown actions__item">' +
                    '<i data-toggle="dropdown" class="fa fa-ellipsis-h"></i>' +
                    '<div class="dropdown-menu dropdown-menu-right">' + appendMessage +
		 

                    '</div>' +
                    '</div>'
                    }



                    }
                    else
                    {
                    return '-'

                    }


                    }
                    }
	

	 ],
	ajax: {
	url: "@Url.Action("get_List_of_User_Profiles", "users")",
	type: 'GET',
	dataType: 'json',
	dataSrc: '',
	data: sendFilterData,
	error: function(jqXHR, textStatus, errorThrown) {
	if (JSON.stringify(jqXHR.responseText) == "\"API Authorization failed\"")
	{
	swal({
	title: 'Failed!',
	text: jqXHR.responseText,
	type: 'error',
	buttonsStyling: false,
	confirmButtonClass: 'btn btn-primary',
	allowOutsideClick: false
	}).then(function() {
	window.location = "@Url.Action("AuthorizationFailed", "users")"
	}) 
	}
	else
	{
		swal({
		title: 'Contact Administrator !',
		text: jqXHR.responseText,
		type: 'error',
		buttonsStyling: false,
		confirmButtonClass: 'btn btn-primary'
		}) 
	}
	}
	}
	})
     
	  
 $('body').on('click', '.ColVis_collection li', function(a) {
    event.stopPropagation();
  });
 
 $('body').on('change', '.colvis_switch', function(a) {
    var column = table.column($(this).attr('data-column'));
    column.visible(!column.visible());
  });


 

   
	 


	


							
					}
                    	

					$(document).ready(function () {


					if("@Context.Session.GetString("module")"=="client") 
                                                                                                        fill_users()


					var Actions=getAutho("users","list")
					if(Actions == undefined){
					window.location = "@Url.Action("RoleAuthorizationFailed", "users")"
					}




					});
					

                    $("body").on("click", "[data-table-action]", function(a) {
                    a.preventDefault();
                    var b = $(this).data("table-action");
                    console.log('dataTables_wrapper', $(this).closest(".dataTables_wrapper").find(".buttons-print"));
                    if ("excel" === b && $(this).closest(".dataTables_wrapper").find(".buttons-excel").trigger("click"), "csv" === b && $(this).closest(".dataTables_wrapper").find(".buttons-csv").trigger("click"), "print" === b && $(this).closest(".dataTables_wrapper").find(".buttons-print").trigger("click"), "fullscreen" === b) {
                    var c = $(this).closest(".card");
                    c.hasClass("card--fullscreen") ? (c.removeClass("card--fullscreen"), $("body").removeClass("data-table-toggled")) : (c.addClass("card--fullscreen"), $("body").addClass("data-table-toggled"))
                    }
                    });
					</script>
					
					
					
					
								<script>
								$(document).ready(function () {
								$("#tenantid").change(function(){
								fill_users();
								})

								$("#btnFilter").click(function(){
								fill_users();
								})
								});
								</script> 


<script>
$(".tenant_display").html(getUrlVars()["businesstype"])

// Function to create the option elements
function createOptionElement(value, label, className) {
	var option = document.createElement("option");
	option.value = value;
	option.textContent = label;
	option.className = className;
	return option;
}

// Function to populate the dropdown
function populateDropdown(data) {
	var dropdown = document.getElementById("tenantid");
	

    // Create a dictionary to store child options grouped by parentid
    var groupedOptions = { };

                // Filter out duplicate entries with the same businessname
                var filteredData = [];
                var uniqueNames = new Set();

                data.forEach(function(item) {
                    if (!uniqueNames.has(item.businessname))
                    {
                        filteredData.push(item);
                        uniqueNames.add(item.businessname);
                    }
                });

                // Group child options under corresponding parent options
                filteredData.forEach(function(item) {
                    if (!item.parentid)
                    {
                        dropdown.appendChild(createOptionElement(item.tenantid, item.businessname, "optionGroup"));
                    }
                    else
                    {
                        if (!groupedOptions[item.parentid])
                        {
                            groupedOptions[item.parentid] = [];
                        }
                        groupedOptions[item.parentid].push(item);
                    }
                });

                // Add child options to their corresponding parent options
                Object.keys(groupedOptions).forEach(function(parentid) {
                    var parentOption = dropdown.querySelector('[value="' + parentid + '"]');
                    groupedOptions[parentid].forEach(function(childOption) {
                        parentOption.insertAdjacentElement('afterend', createOptionElement(childOption.tenantid, childOption.businessname, "optionChild"));
                    });
                });
                
                filteredData.forEach(function (item) {
			        if (!item.parentid && !groupedOptions[item.tenantid]) {
				        var parentOption = dropdown.querySelector('[value="' + item.tenantid + '"]');
				        if(item.natureofbusiness.indexOf("Lead") !== -1)
				        parentOption.classList.add("optionNoChildLead");
				        else
				        parentOption.classList.add("optionNoChild");
			        }
		        });

                $("#tenantid").val(str_tenantid);
                $("#tenantid").select2()
                var space = '&nbsp;&nbsp;&nbsp;'
				$("#tenantid").find('.optionChild').prepend(space);
                
                        if(str_tenantid=='')
                        {
                                var select2Instance = $('#tenantid');
                                var firstOption = $('#tenantid option:first');
                                select2Instance.val(firstOption.val()).trigger('change.select2');
                                fill_users()
					
                        }

            }
$(document).ready(function () {
 if ("@Context.Session.GetString("Marketplacenewshowtenant")" =="Y")
 {
$.ajax({
url: '@Url.Action("get_project_tenant","tenant")',
dataType: 'json',
data:{"businesstype":  getUrlVars()["businesstype"] ,"tenantid": "@Context.Session.GetString("Marketplacenewchoosedtenantid")"},
success: function(data) {

    populateDropdown(data)
		
    
 

},
error: function(jqXHR, textStatus, errorThrown) {
if (JSON.stringify(jqXHR.responseText) == "\"API Authorization failed\"")
{
swal({
title: 'Failed!',
text: jqXHR.responseText,
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary',
allowOutsideClick: false
}).then(function() {
window.location = "@Url.Action("AuthorizationFailed", "users")"
}) 
}
else
{
swal({
title: 'Contact Administrator !',
text: jqXHR.responseText,
type: 'error',
buttonsStyling: false,
confirmButtonClass: 'btn btn-primary'
}) 
}
}
})
}else
{

	$(".tenant_display").hide()
}
});
</script>


					
                    
                    
                    
					
